package
{
   import flash.utils.Dictionary;
   
   public class SlipToe extends MousePinus
   {
      
      public static const adaptableBurn:int =  1;
      
      public static const kotskyFeeble:int =  2;
      
      public static const adhesiveCoal:int =  3;
      
      public static const creatorHarmony:int =  4;
      
      public static const complexWhisper:int =  5;
      
      public static const inexpensiveNotebook:int =  6;
       
      
      public var burnSign:Dictionary;
      
      public var fourBorrow:Dictionary;
      
      public var panoramicMetal:Dictionary;
      
      public var metalInexpensive:Dictionary;
      
      public var dildoUncle:Boolean = false;
      
      public function SlipToe(param1:FragileWandering)
      {
         this.§\x01\x06\x05\x04\x04\x02\x04\x03\x07\x04\x06invitePeck\x07\x02\x02\x05\x05\b\x07\x02\b\x01\x06\x01invitePeck\x06\b\x06\x01\b\b\x05\x03\x02\x03\x02\x07invitePeck\x03\x02\b\x02\x07\x05\x02\x02\b\x06\x04\x07\x03§ = new Dictionary();
         super(param1);
      }
      
      override public function abaftInvite(param1:RobinAdaptable, param2:BabiesHistorical, param3:Number) : Boolean
      {
         if(!§lightArmy\x02\x03\x01\x05\x03\x04\x02\x06\x01\x04\x04curvedSlip\x07\x02\x02\x05\x05\b\x07\x02\b\x01\x06\x01abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03spuriousDildo\x03\x07\x07\x04\x01\x02\x05\x06\x03\x07\x04\x03\x03bladeUnequaled\x07\x06\x06\x02\x02\x01\x02\x02\x02\x05zonkedFragile\x03\x07\x07\x04\x01\x02\x05\x06\x03\x07\x04\x03\x03bladeUnequaled\x07\x06\x06\x02\x02\x01\x02\x02\x02\x05panoramicChickens\x03\x07\x07\x04\x01\x02\x05\x06\x03\x07\x04\x03\x03bladeUnequaled\x07\x06\x06\x02\x02\x01\x02\x02\x02\x05touchMouse\x07\x02\x02\x05\x05\b\x07\x02\b\x01\x06\x01abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03chivalrousWicked\x07\x02\x02\x05\x05\b\x07\x02\b\x01\x06\x01abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03violetPail\x07\b\x02\x01\x01\x01\x07\b\x06\x07\b\x05coalPinus\x03\x04\x04\b\x07\x03\x01\x07\x07\x04\x04\x04bladeUnequaled\x03\x02\b\x03\x05\x05\x05\x07\b\b\x07§;
         if(param2 == SlipToe.adaptableBurn)
         {
            this.§\x01\x06\x05\x04\x04\x02\x04\x03\x07\x04\x06abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03flowerLarge\x02\x05\x02\b\x04\b\x01\x04\x07\x07\x06§);
         }
         else if(SlipToe.kotskyFeeble == param2)
         {
            _loc3_.§\b\x04\x05\x07\x02\x01\x04\x04\x03\b\x04\x04listCry\x03\x04\x04\b\x07\x03\x01\x07\x07\x04\x04\x04bladeUnequaled\x05\x02\x04\x02\x07\x03\x04\b\x03\x02\x04staySqueamish\x05\x02\b\x04\x01\x07\x07\b\x03\b\x05buryCrowded\x07\x02\x02\x05\x05\b\x07\x02\b\x01\x06\x01abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03borrowWatery\x01\x07\x01\b\x07\b\x01\x06\b\x02\x01\x03crackerMark\x06\x04\x03\x07\x04\x03\x05\x06\x04\x05\x07\bscintillatingWhisper\x03\x04\x04\b\x07\x03\x01\x07\x07\x04\x04\x04bladeUnequaled\x04\x07\x05\x06\x01\b\x04\x05\x03\x04\bflowerComplex\x04\x01\x04\x02\x05\x07\x01\x04\b\b\x01§ = HateFaint.proudGround;
            }
         }
         else if(SlipToe.complexWhisper == param2)
         {
            this.§\x06\b\x06\x01\b\b\x05\x03\x02\x03\x02\x07abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03burnCoal\x07\x04\x01\b\x07\x03\x02\x03\b\x02\x06wateryBashful\x03\x02\b\x02\x07\x05\x02\x02\b\x06\x04\x07\x03abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03supplyUnequaled\b\x04\b\x01\x05\x05\x06\x07\x04\x06\b\x02\x01buryAlanson\x05\x07\b\x03\x04\b\b\x05\x03\x06\x01\x03\x06agreeProse\x02\x02\x03\b\x06\x05\x07\b\x07\x01\x05\x01\x02crimeBerry\x07\x06\x07\x06\x05\x07\x06\x05\x01\x05\x04\x03\x01suzukaIcy\x01\x06\x05\x04\x04\x02\x04\x03\x07\x04\x06abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03decayColor\x02\b\x05\x03\x07\b\b\x07\x02\x01\b\x06colorLarge\x01\x06\x05\x04\x04\x02\x04\x03\x07\x04\x06invitePeck\x07\x02\x02\x05\x05\b\x07\x02\b\x01\x06\x01invitePeck\x06\b\x06\x01\b\b\x05\x03\x02\x03\x02\x07invitePeck\x03\x02\b\x02\x07\x05\x02\x02\b\x06\x04\x07\x03invitePeck\x06\x04\x03\x07\x04\x03\x05\x06\x04\x05\x07\bstickDistro\x01\b\x01\b\b\x07\x07\x03\x05\x01\x04\x01\x06suzukaIcy\x06\b\x06\x01\b\b\x05\x03\x02\x03\x02\x07abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03annoyingWicked\x03\x07\x05\x04\b\x03\x03\x01\x03\x01\x05subduedAlanson\x03\x02\b\x02\x07\x05\x02\x02\b\x06\x04\x07\x03abaftGaping\x02\x03\x05\b\x07\x02\x03\b\x06\x05\x01\x03inviteStick\b\x04\b\x01\x05\x05\x06\x07\x04\x06\b\x02\x01sighBack\x03\x04\x04\b\x07\x03\x01\x07\x07\x04\x04\x04bladeUnequaled\x03\x02\b\x03\x05\x05\x05\x07\b\b\x07bladeUnequaled\x05\x07\b\x03\x04\b\b\x05\x03\x06\x01\x03\x06agreeProse\x02\x02\x03\b\x06\x05\x07\b\x07\x01\x05\x01\x02§);
         }
         if(this.dildoUncle && param1.obeisantAnnoying)
         {
            param1.§\x03\x04\x04\b\x07\x03\x01\x07\x07\x04\x04\x04bladeUnequaled\x04\x07\x05\x06\x01\b\x04\x05\x03\x04\bcrowdedAdvise\x04\x01\x04\x02\x05\x07\x01\x04\b\b\x01seedLabel\x01\x04\b\x06\x06\x02\x06\x01\x03\x07\x05\x05\x02suzukaWing\x07\b\x02\x01\x01\x01\x07\b\x06\x07\b\x05sandDistro\x01\x04\b\x06\x06\x02\x06\x01\x03\x07\x05\x05\x02§(OrderUnit.apatheticRare(CardBabies.machineOranges)));
               }
         }
      }
   }
}
